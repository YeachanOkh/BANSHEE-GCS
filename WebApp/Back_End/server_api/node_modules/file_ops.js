//Methods related to file operations

// Function to write 'users' array to the JSON file
async function writeUserData() {
    try {
      await fs.writeFile(profilePath, JSON.stringify(users, null, 2), 'utf-8');
    } catch (err) {
      // Handle errors if the file cannot be written
      console.error('Error writing user data:', err);
    }
  }

// Function to format a number as a two-digit string (e.g., 1 => "01")
function formatAsTwoDigitString(number) {
return number.toString().padStart(2, '0');
}


// Function to add a filename to the array and return the updated list
function addFileName(filename) {
uploadedFileNames.push(filename);
return uploadedFileNames;
}

// Read filenames from the data directory and populate the array
async function populateFileNamesArray() {
try {
    const filenames = await fs.readdir(database);
    uploadedFileNames = filenames;
} catch (error) {
    console.error('Error populating filenames array:', error);
}
}

// Check if the JSON file exists and read the initial data
async function readUserData(profilePath) {
    try {
      const data = await fs.readFile(profilePath, 'utf-8');
      users = JSON.parse(data);
      console.log('Users data loaded successfully:', users);
    } catch (err) {
      console.error('Error reading user data:', err);
      users = [];
    }
  }

module.exports = {
    populateFileNamesArray,
    addFileName,
    formatAsTwoDigitString,
    writeUserData,
    readUserData
};